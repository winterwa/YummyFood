{"version":3,"sources":["utils.js","components/FoodList.js","components/LoginForm.js","components/MyCart.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","Option","Select","AddToCartButton","itemId","useState","loading","setLoading","title","type","icon","PlusOutlined","onClick","addItemToCart","message","success","catch","err","error","finally","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","json","data","restId","value","onSelect","placeholder","style","width","onChange","map","item","id","name","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","extra","src","imageUrl","alt","height","display","price","LoginForm","state","onFinish","setState","props","onSuccess","render","margin","rules","required","prefix","UserOutlined","Password","LockOutlined","htmlType","React","Component","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuItem","description","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c2dc39b.chunk.js","sourcesContent":["  export const login = (credential) => {\r\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\r\n   \r\n    return fetch(loginUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    }).then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to log in\");\r\n      }\r\n    });\r\n  };\r\n   \r\n  export const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to get menus\");\r\n      }\r\n   \r\n      return response.json();\r\n    });\r\n  };\r\n   \r\n  export const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to get restaurants\");\r\n      }\r\n   \r\n      return response.json();\r\n    });\r\n  };\r\n   \r\n  export const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n      if (response.status != 200) {\r\n        throw Error(\"Fail to get shopping cart data\");\r\n      }\r\n   \r\n      return response.json();\r\n    });\r\n  };\r\n   \r\n  export const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n      if (response.status !== 200) {\r\n        throw Error(\"Fail to checkout\");\r\n      }\r\n    });\r\n  };\r\n   \r\n  export const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    }).then((response) => {\r\n      if (response.status !== 201) {\r\n        throw Error(\"Fail to add menu item to shopping cart\");\r\n      }\r\n    });\r\n  };\r\n  ","import { Button, Card, List, message, Select, Tooltip } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { addItemToCart, getMenus, getRestaurants } from \"../utils\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n \r\nconst { Option } = Select;\r\n \r\nconst AddToCartButton = ({ itemId }) => {\r\n  const [loading, setLoading] = useState(false);\r\n \r\n  const AddToCart = () => {\r\n    setLoading(true);\r\n    addItemToCart(itemId)\r\n      .then(() => message.success(`Successfully add item`))\r\n      .catch((err) => message.error(err.message))\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n \r\n  return (\r\n    <Tooltip title=\"Add to shopping cart\">\r\n      <Button\r\n        loading={loading}\r\n        type=\"primary\"\r\n        icon={<PlusOutlined />}\r\n        onClick={AddToCart}\r\n      />\r\n    </Tooltip>\r\n  );\r\n};\r\n \r\nconst FoodList = () => {\r\n  const [foodData, setFoodData] = useState([]);\r\n  const [curRest, setCurRest] = useState();\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingRest, setLoadingRest] = useState(false);\r\n \r\n  useEffect(() => {\r\n    setLoadingRest(true);\r\n    getRestaurants()\r\n      .then((data) => {\r\n        setRestaurants(data);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      })\r\n      .finally(() => {\r\n        setLoadingRest(false);\r\n      });\r\n  }, []);\r\n \r\n  useEffect(() => {\r\n    if (curRest) {\r\n      setLoading(true);\r\n      getMenus(curRest)\r\n        .then((data) => {\r\n          setFoodData(data);\r\n        })\r\n        .catch((err) => {\r\n          message.error(err.message);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [curRest]);\r\n \r\n  return (\r\n    <>\r\n      <Select\r\n        value={curRest}\r\n        onSelect={(value) => setCurRest(value)}\r\n        placeholder=\"Select a restaurant\"\r\n        loading={loadingRest}\r\n        style={{ width: 300 }}\r\n        onChange={() => {}}\r\n      >\r\n        {restaurants.map((item) => {\r\n          return <Option value={item.id}>{item.name}</Option>;\r\n        })}\r\n      </Select>\r\n      {curRest && (\r\n        <List\r\n          style={{ marginTop: 20 }}\r\n          loading={loading}\r\n          grid={{\r\n            gutter: 16,\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 3,\r\n            xxl: 3,\r\n          }}\r\n          dataSource={foodData}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Card\r\n                title={item.name}\r\n                extra={<AddToCartButton itemId={item.id} />}\r\n              >\r\n                <img\r\n                  src={item.imageUrl}\r\n                  alt={item.name}\r\n                  style={{ height: 340, width: \"100%\", display: \"block\" }}\r\n                />\r\n                {`Price: ${item.price}`}\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n \r\nexport default FoodList;","import { Button, Form, Input, message } from \"antd\";\r\nimport React from \"react\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { login } from \"../utils\";\r\n \r\nclass LoginForm extends React.Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n \r\n  onFinish = (data) => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    login(data)\r\n      .then(() => {\r\n        message.success(`Login Successful`);\r\n        this.props.onSuccess();\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n \r\n  render = () => {\r\n    return (\r\n      <Form\r\n        name=\"normal_login\"\r\n        onFinish={this.onFinish}\r\n        style={{\r\n          width: 300,\r\n          margin: \"auto\",\r\n        }}\r\n      >\r\n        <Form.Item\r\n          name=\"username\"\r\n          rules={[{ required: true, message: \"Please input your Username!\" }]}\r\n        >\r\n          <Input prefix={<UserOutlined />} placeholder=\"Username\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"Please input your Password!\" }]}\r\n        >\r\n          <Input.Password prefix={<LockOutlined />} placeholder=\"Password\" />\r\n        </Form.Item>\r\n \r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\r\n            Login\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  };\r\n}\r\n \r\nexport default LoginForm;","import { Button, Drawer, List, message, Typography } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { checkout, getCart } from \"../utils\";\r\n \r\nconst { Text } = Typography;\r\n \r\nconst MyCart = () => {\r\n  const [cartVisible, setCartVisible] = useState(false);\r\n  const [cartData, setCartData] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [checking, setChecking] = useState(false);\r\n \r\n  useEffect(() => {\r\n    if (!cartVisible) {\r\n      return;\r\n    }\r\n \r\n    setLoading(true);\r\n    getCart()\r\n      .then((data) => {\r\n        setCartData(data);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [cartVisible]);\r\n \r\n  const onCheckOut = () => {\r\n    setChecking(true);\r\n    checkout()\r\n      .then(() => {\r\n        message.success(\"Successfully checkout\");\r\n        setCartVisible(false);\r\n      })\r\n      .catch((err) => {\r\n        message.error(err.message);\r\n      })\r\n      .finally(() => {\r\n        setChecking(false);\r\n      });\r\n  };\r\n \r\n  const onCloseDrawer = () => {\r\n    setCartVisible(false);\r\n  };\r\n \r\n  const onOpenDrawer = () => {\r\n    setCartVisible(true);\r\n  };\r\n \r\n  return (\r\n    <>\r\n      <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\r\n        Cart\r\n      </Button>\r\n      <Drawer\r\n        title=\"My Shopping Cart\"\r\n        onClose={onCloseDrawer}\r\n        visible={cartVisible}\r\n        width={520}\r\n        footer={\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\r\n            <div>\r\n              <Button onClick={onCloseDrawer} style={{ marginRight: 8 }}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={onCheckOut}\r\n                type=\"primary\"\r\n                loading={checking}\r\n                disabled={loading || cartData?.orderItemList.length === 0}\r\n              >\r\n                Checkout\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <List\r\n          loading={loading}\r\n          itemLayout=\"horizontal\"\r\n          dataSource={cartData?.orderItemList}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                title={item.menuItem.name}\r\n                description={`$${item.price}`}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n \r\nexport default MyCart;","import { Layout, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport FoodList from \"./components/FoodList\";\nimport LoginForm from \"./components/LoginForm\";\nimport MyCart from \"./components/MyCart\";\n \nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n \nfunction App() {\n  const [authed, setAuthed] = useState(false);\n \n  return (\n    <Layout style={{ height: \"100vh\" }}>\n      <Header>\n        <div className=\"header\" style={{display: 'flex', justifyContent:'space-between'}}>\n          <Title\n            level={2}\n            style={{ color: \"white\", lineHeight: \"inherit\", marginBottom: 0 }}\n          >\n            Lai Food\n          </Title>\n          {authed && (\n            <div>\n              <MyCart />\n            </div>\n          )}\n        </div>\n      </Header>\n      <Content\n        style={{\n          padding: \"50px\",\n          maxHeight: \"calc(100% - 64px)\",\n          overflowY: \"auto\",\n        }}\n      >\n        {authed ? (\n          <FoodList />\n        ) : (\n          <LoginForm onSuccess={() => setAuthed(true)} />\n        )}\n      </Content>\n    </Layout>\n  );\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}